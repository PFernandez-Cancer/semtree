#library()
sed <- 234#1328#34
set.seed(sed)
M1 <- generate.rnd(sd=1)
set.seed(sed)
M2 <- generate.rnd(sd=.5)
set.seed(sed)
M3 <- generate.rnd(sd=1,cl=TRUE)
set.seed(sed)
M4 <- generate.rnd(sd=.5,cl=TRUE)
p1 <- plotbd(M1)
p2 <- plotbd(M2)
p3 <- plotbd(M3)
p4 <- plotbd(M4)
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)
#plot(p)
library(png)
library("ggplot2")
library(semtree)
library(gridExtra)
library(grid)
#M <- as.dist(M)
#par(mfrow=c(1,2))
#plot(M,num.cluster = 1)
#plot(x,y,type="n")
#text(x,y,1:length(x))
plotbd <- function(dataset) {
x <- dataset$x
y <- dataset$y
M <- matrix(NA,nrow=length(x),ncol=length(y))
for (i in 1:length(x)) {
for (j in i:length(y)) {
M[i,j] <- M[j,i] <- sqrt( (x[i]-x[j])^2+(y[i]-y[j])^2 )
}
}
class(M) <- "diversityMatrix"
#return(M)
bd <- biodiversity(M)
p <- ggplot(dataset, aes(x=x,y=y))+theme_minimal()+geom_point()+
xlim(-2,2)+ylim(-2,+2)+xlab("")+ylab("")
#ghost = readPNG("~/Desktop/tree.png", TRUE)
ghost = readPNG("~/Desktop/freeart-trees1.png", TRUE)
for(i in 1:nrow(dataset)){
p = p + annotation_custom(
rasterGrob(ghost),
xmin = dataset$x[i]-0.2, xmax = dataset$x[i]+0.2,
ymin = dataset$y[i]-0.2, ymax = dataset$y[i]+0.2
)
}
p <- p + annotate("text", x = -.5, y = -1.5, label = paste("Bio Diversity = ",round(bd,2)))
return(p)
}
set.seed(123434)
generate.rnd <- function(sd = 1, N = 9, cl=FALSE) {
x <- rnorm(N,sd = sd)
y <- rnorm(N,sd = sd)
#x[1] <- 0
#y[1] <- 0
if (cl) {
#  cli <- 1:(N/2)
#  ncli<-(N/2+1):N
#  cli <- x>0
#  ncli <- x<0
#  oo <- sd
#  x[cli] <- x[cli] + oo
#  y[cli] <- y[cli] + oo
#  x[ncli] <- x[ncli] - oo
#  y[ncli] <- y[ncli] - oo
x[x>0] <- (x[x>0]+max(x))/2
x[x<0] <- (x[x<0]+min(x))/2
}
dataset <- cbind(x,y)
dataset <- data.frame(dataset)
return(dataset)
}
#library()
sed <- 4234#1328#34
set.seed(sed)
M1 <- generate.rnd(sd=1)
set.seed(sed)
M2 <- generate.rnd(sd=.5)
set.seed(sed)
M3 <- generate.rnd(sd=1,cl=TRUE)
set.seed(sed)
M4 <- generate.rnd(sd=.5,cl=TRUE)
p1 <- plotbd(M1)
p2 <- plotbd(M2)
p3 <- plotbd(M3)
p4 <- plotbd(M4)
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)
#plot(p)
library(png)
library("ggplot2")
library(semtree)
library(gridExtra)
library(grid)
#M <- as.dist(M)
#par(mfrow=c(1,2))
#plot(M,num.cluster = 1)
#plot(x,y,type="n")
#text(x,y,1:length(x))
plotbd <- function(dataset) {
x <- dataset$x
y <- dataset$y
M <- matrix(NA,nrow=length(x),ncol=length(y))
for (i in 1:length(x)) {
for (j in i:length(y)) {
M[i,j] <- M[j,i] <- sqrt( (x[i]-x[j])^2+(y[i]-y[j])^2 )
}
}
class(M) <- "diversityMatrix"
#return(M)
bd <- biodiversity(M)
p <- ggplot(dataset, aes(x=x,y=y))+theme_minimal()+geom_point()+
xlim(-2,2)+ylim(-2,+2)+xlab("")+ylab("")
#ghost = readPNG("~/Desktop/tree.png", TRUE)
ghost = readPNG("~/Desktop/freeart-trees1.png", TRUE)
for(i in 1:nrow(dataset)){
p = p + annotation_custom(
rasterGrob(ghost),
xmin = dataset$x[i]-0.2, xmax = dataset$x[i]+0.2,
ymin = dataset$y[i]-0.2, ymax = dataset$y[i]+0.2
)
}
p <- p + annotate("text", x = -.5, y = -1.5, label = paste("Bio Diversity = ",round(bd,2)))
return(p)
}
set.seed(123434)
generate.rnd <- function(sd = 1, N = 9, cl=FALSE) {
x <- rnorm(N,sd = sd)
y <- rnorm(N,sd = sd)
#x[1] <- 0
#y[1] <- 0
if (cl) {
#  cli <- 1:(N/2)
#  ncli<-(N/2+1):N
#  cli <- x>0
#  ncli <- x<0
#  oo <- sd
#  x[cli] <- x[cli] + oo
#  y[cli] <- y[cli] + oo
#  x[ncli] <- x[ncli] - oo
#  y[ncli] <- y[ncli] - oo
x[x>0] <- (x[x>0]+max(x))/2
x[x<0] <- (x[x<0]+min(x))/2
}
dataset <- cbind(x,y)
dataset <- data.frame(dataset)
return(dataset)
}
#library()
sed <- 54234#1328#34
set.seed(sed)
M1 <- generate.rnd(sd=1)
set.seed(sed)
M2 <- generate.rnd(sd=.5)
set.seed(sed)
M3 <- generate.rnd(sd=1,cl=TRUE)
set.seed(sed)
M4 <- generate.rnd(sd=.5,cl=TRUE)
p1 <- plotbd(M1)
p2 <- plotbd(M2)
p3 <- plotbd(M3)
p4 <- plotbd(M4)
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)
#plot(p)
library(png)
library("ggplot2")
library(semtree)
library(gridExtra)
library(grid)
#M <- as.dist(M)
#par(mfrow=c(1,2))
#plot(M,num.cluster = 1)
#plot(x,y,type="n")
#text(x,y,1:length(x))
plotbd <- function(dataset) {
x <- dataset$x
y <- dataset$y
M <- matrix(NA,nrow=length(x),ncol=length(y))
for (i in 1:length(x)) {
for (j in i:length(y)) {
M[i,j] <- M[j,i] <- sqrt( (x[i]-x[j])^2+(y[i]-y[j])^2 )
}
}
class(M) <- "diversityMatrix"
#return(M)
bd <- biodiversity(M)
p <- ggplot(dataset, aes(x=x,y=y))+theme_minimal()+geom_point()+
xlim(-2,2)+ylim(-2,+2)+xlab("")+ylab("")
#ghost = readPNG("~/Desktop/tree.png", TRUE)
ghost = readPNG("~/Desktop/freeart-trees1.png", TRUE)
for(i in 1:nrow(dataset)){
p = p + annotation_custom(
rasterGrob(ghost),
xmin = dataset$x[i]-0.2, xmax = dataset$x[i]+0.2,
ymin = dataset$y[i]-0.2, ymax = dataset$y[i]+0.2
)
}
p <- p + annotate("text", x = -.5, y = -1.5, label = paste("Bio Diversity = ",round(bd,2)))
return(p)
}
set.seed(123434)
generate.rnd <- function(sd = 1, N = 8, cl=FALSE) {
x <- rnorm(N,sd = sd)
y <- rnorm(N,sd = sd)
#x[1] <- 0
#y[1] <- 0
if (cl) {
#  cli <- 1:(N/2)
#  ncli<-(N/2+1):N
#  cli <- x>0
#  ncli <- x<0
#  oo <- sd
#  x[cli] <- x[cli] + oo
#  y[cli] <- y[cli] + oo
#  x[ncli] <- x[ncli] - oo
#  y[ncli] <- y[ncli] - oo
x[x>0] <- (x[x>0]+max(x))/2
x[x<0] <- (x[x<0]+min(x))/2
}
dataset <- cbind(x,y)
dataset <- data.frame(dataset)
return(dataset)
}
#library()
sed <- 34#1328#34
set.seed(sed)
M1 <- generate.rnd(sd=1)
set.seed(sed)
M2 <- generate.rnd(sd=.5)
set.seed(sed)
M3 <- generate.rnd(sd=1,cl=TRUE)
set.seed(sed)
M4 <- generate.rnd(sd=.5,cl=TRUE)
p1 <- plotbd(M1)
p2 <- plotbd(M2)
p3 <- plotbd(M3)
p4 <- plotbd(M4)
grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)
#plot(p)
library(png)
library("ggplot2")
library(semtree)
library(gridExtra)
library(grid)
#M <- as.dist(M)
#par(mfrow=c(1,2))
#plot(M,num.cluster = 1)
#plot(x,y,type="n")
#text(x,y,1:length(x))
plotbd <- function(dataset) {
x <- dataset$x
y <- dataset$y
M <- matrix(NA,nrow=length(x),ncol=length(y))
for (i in 1:length(x)) {
for (j in i:length(y)) {
M[i,j] <- M[j,i] <- sqrt( (x[i]-x[j])^2+(y[i]-y[j])^2 )
}
}
class(M) <- "diversityMatrix"
#return(M)
bd <- biodiversity(M)
p <- ggplot(dataset, aes(x=x,y=y))+theme_minimal()+geom_point()+
xlim(-2,2)+ylim(-2,+2)+xlab("")+ylab("")
#ghost = readPNG("~/Desktop/tree.png", TRUE)
ghost = readPNG("~/Desktop/freeart-trees1.png", TRUE)
for(i in 1:nrow(dataset)){
p = p + annotation_custom(
rasterGrob(ghost),
xmin = dataset$x[i]-0.2, xmax = dataset$x[i]+0.2,
ymin = dataset$y[i]-0.2, ymax = dataset$y[i]+0.2
)
}
p <- p + annotate("text", x = -.5, y = -1.5, label = paste("Bio Diversity = ",round(bd,2)))
return(p)
}
set.seed(123434)
generate.rnd <- function(sd = 1, N = 8, cl=FALSE) {
x <- rnorm(N,sd = sd)
y <- rnorm(N,sd = sd)
#x[1] <- 0
#y[1] <- 0
if (cl) {
#  cli <- 1:(N/2)
#  ncli<-(N/2+1):N
#  cli <- x>0
#  ncli <- x<0
#  oo <- sd
#  x[cli] <- x[cli] + oo
#  y[cli] <- y[cli] + oo
#  x[ncli] <- x[ncli] - oo
#  y[ncli] <- y[ncli] - oo
x[x>0] <- (x[x>0]+max(x))/2
x[x<0] <- (x[x<0]+min(x))/2
}
dataset <- cbind(x,y)
dataset <- data.frame(dataset)
return(dataset)
}
#library()
sed <- 34#1328#34
set.seed(sed)
M1 <- generate.rnd(sd=1)
set.seed(sed)
M2 <- generate.rnd(sd=.5)
set.seed(sed)
M3 <- generate.rnd(sd=1,cl=TRUE)
set.seed(sed)
M4 <- generate.rnd(sd=.5,cl=TRUE)
p1 <- plotbd(M1)
p2 <- plotbd(M2)
p3 <- plotbd(M3)
p4 <- plotbd(M4)
gp <- grid.arrange(p1,p2,p3,p4,ncol=2,nrow=2)
plot(gp)
#plot(p)
ggplot2::ggsave(filename="~/multiplot-trees.pdf",plot=gp)
forest
fr
set.seed(789)
require("semtree")
data(lgcm)
lgcm$agegroup <- as.ordered(lgcm$agegroup)
lgcm$training <- as.factor(lgcm$training)
lgcm$noise <- as.numeric(lgcm$noise)
# LOAD IN OPENMX MODEL.
# A SIMPLE LINEAR GROWTH MODEL WITH 5 TIME POINTS FROM SIMULATED DATA
manifests <- names(lgcm)[1:5]
lgcModel <- mxModel("Linear Growth Curve Model Path Specification",
type="RAM",
manifestVars=manifests,
latentVars=c("intercept","slope"),
# residual variances
mxPath(
from=manifests,
arrows=2,
free=TRUE,
values = c(1, 1, 1, 1, 1),
labels=c("residual1","residual2","residual3","residual4","residual5")
),
# latent variances and covariance
mxPath(
from=c("intercept","slope"),
connect="unique.pairs",
arrows=2,
free=TRUE,
values=c(1, 1, 1),
labels=c("vari", "cov", "vars")
),
# intercept loadings
mxPath(
from="intercept",
to=manifests,
arrows=1,
free=FALSE,
values=c(1, 1, 1, 1, 1)
),
# slope loadings
mxPath(
from="slope",
to=manifests,
arrows=1,
free=FALSE,
values=c(0, 1, 2, 3, 4)
),
# manifest means
mxPath(
from="one",
to=manifests,
arrows=1,
free=FALSE,
values=c(0, 0, 0, 0, 0)
),
# latent means
mxPath(
from="one",
to=c("intercept", "slope"),
arrows=1,
free=TRUE,
values=c(1, 1),
labels=c("meani", "means")
),
mxData(lgcm,type="raw")
)
fr <- semforest(lgcModel, lgcm,control = semforest.control(num.trees = 25))
vimp <- varimp(fr)
print(vimp)
print(vimp, na.omit=TRUE)
vimp2 <- varimp(fr, method="permutationInteraction")
D <- diversityMatrix(fr)
setwd("~/Documents/workspace/semtree/R")
forest
fr
forest <- fr
res <- mapply(FUN=evalTreeOob, forest$forest, forest$forest.data, forest$data)
evaluateTree()
forest$forest.data[[1]]
forest$forest.data[[1]]$oob.data
ComputeOOBWeights <- function(forest) {
forest$weights <- mapply(forest$forest,forest$forest.data, FUN= function(tree, data) {
evaluateTree(tree=tree, test_set=data$oob.data,data_type = "raw")
})
forest$weights <- forest$weights / sum(forest$weights)
}
forest$forest.data[[1]]$oob.data
forest$weights <- mapply(forest$forest,forest$forest.data, FUN= function(tree, data) {
evaluateTree(tree=tree, test_set=data$oob.data,data_type = "raw")
})
forest$weights
forest$weights[1,]
unlist(forest$weights[1,])
weights <- mapply(forest$forest,forest$forest.data, FUN= function(tree, data) {
evaluateTree(tree=tree, test_set=data$oob.data,data_type = "raw")
})
forest$weights <- unlist(weights[1,])
forest$weights <- forest$weights / sum(forest$weights)
forest$weights
hist(forest$weights)
which.max(forest$weights)
forest$forest[[22]]
forest$forest[[1]]
misfit <- mapply(forest$forest,forest$forest.data, FUN= function(tree, data) {
evaluateTree(tree=tree, test_set=data$oob.data,data_type = "raw")
})
forest$weights <- 1/unlist(misfit[1,])
forest$weights <- forest$weights / sum(forest$weights)
forest$weights
hist(forest$weights)
which.max(forest$weights)
forest$forest[[15]]
which.min(forest$weights)
forest$forest[[22]]
sort(forest$weights)
sort(forest$weights,index.return=TRUE)
forest$forest[[8]]
forest$forest[[22]]
forest$forest[[6]]
sort(forest$weights,index.return=TRUE)
forest$forest[[15]]
forest$forest[[3]]
forest$forest[[10]]
forest$forest[[11]]
forest$forest[[2]]
plot(forest$forest[[2]])
forest$weights <- NULL
forest$weights
is.null(forest$weights)
getOOBWeights <- function(forest) {
misfit <- mapply(forest$forest,forest$forest.data, FUN= function(tree, data) {
evaluateTree(tree=tree, test_set=data$oob.data,data_type = "raw")
})
weights <- 1/unlist(misfit[1,])
weights <- weights / sum(forest$weights)
return(weights)
}
getOOBWeights()
getOOBWeights(fr)
forest <- fr
getOOBWeights <- function(forest) {
misfit <- mapply(forest$forest,forest$forest.data, FUN= function(tree, data) {
evaluateTree(tree=tree, test_set=data$oob.data,data_type = "raw")
})
weights <- 1/unlist(misfit[1,])
weights <- weights / sum(weights)
return(weights)
}
getOOBWeights(fr)
w <- getOOBWeights(fr)
hist(w)
evaluate(fr)
evaluate(fr)
fr$weights
fr$weights <- getOOBWeights(fr)
evaluate(fr)
fr$wegi
fr$weights
evaluate.semforest <- function(x, data=NULL, ...)
{
if (is.null(data)) {
data <- x$data
}
eval.result <- simplify2array(
lapply(X =forest$forest ,FUN=evaluateTree,test_set = data,data_type = "raw")
)
if (is.null(forest$weights)) {
return(mean(unlist(eval.result[1,])))
} else {
return( sum(forest$weights * unlist(eval.result[1,])) )
}
}
evaluate.semforest(fr)
evaluate <- function (x, ...) {
UseMethod("evaluate", x)
}
evaluate.semforest <- function(x, data=NULL, ...)
{
if (is.null(data)) {
data <- x$data
}
eval.result <- simplify2array(
lapply(X =x$forest ,FUN=evaluateTree,test_set = data,data_type = "raw")
)
if (is.null(x$weights)) {
return(mean(unlist(eval.result[1,])))
} else {
return( sum(x$weights * unlist(eval.result[1,])) )
}
}
evaluate.semforest(fr)
fr$weights<-NULL
evaluate.semforest(fr)
